#!/bin/bash
#
# git-tp-sync - downloads the latest PO files from translationproject.org
#               and commits changes to your GIT repository.
#
# Features:
#             - commit per PO file (no more huge commits for all .po files)
#             - the commit "Author:" field is set according to the Last-Translator
#
# Copyright (C) 2007-2016 Karel Zak <kzak@redhat.com>
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#

PROJECT="util-linux"

DRYRUN="false"
LANGS=()

while [[ $# -gt 0 ]]; do
	case $1 in
	--dry-run)
		DRYRUN="true"
		shift
		;;
	--usage | --help)
		echo "$(basename "$0") [--dry-run] [<lang>, ...]"
		exit 0
		;;
	*)
		LANGS+=("$1")
		shift;
		;;
	esac
done

function get_author {
	echo $(gawk 'BEGIN { FS=": " } /Last-Translator/ { sub("\\\\n\"", ""); print $2 }' "$1")
}

function get_revision {
	echo $(gawk 'BEGIN { FS=": " } /PO-Revision-Date/ { sub("\\\\n\"", ""); print $2 }' "$1" \
		| date '+%s' -f -)
}

function get_revision_orig {
	echo $(git show HEAD:"$1" \
		| gawk 'BEGIN { FS=": " } /PO-Revision-Date/ { sub("\\\\n\"", ""); print $2 }' \
		| date '+%s' -f -)
}

function do_commit {
	local POFILE="$1"
	local MSG="$2"
	local AUTHOR=$(get_author "$POFILE")

	git commit --author "$AUTHOR" -m "$MSG" "$POFILE"
}

function try_lang {
	local POLANG="$1"
	local POFILE="po/$1"

	new_rev=$(get_revision "$POFILE")
	old_rev=$(get_revision_orig "$POFILE")

	if [ $new_rev -gt $old_rev ]; then
		if [ "$DRYRUN" = "true" ]; then
			echo "po: update $POLANG (ingore, dry run)"
		else
			do_commit $POFILE "po: update $POLANG (from translationproject.org)"
		fi
	fi
}

#
# Download
#
if [ ${#LANGS[@]} -eq 0 ]; then
	rsync  -Lrtvz  rsync://translationproject.org/tp/latest/$PROJECT/ po
else
	for l in "${LANGS[@]}"; do
		rsync  -Lrtvz  rsync://translationproject.org/tp/latest/$PROJECT/$l.po po
	done
fi

PO_NEW=$(git ls-files -o -x '*~' po/ | gawk '/po\/[[:alpha:]_\-]*\.po/ { sub("po/", ""); print $0; }' | sort)
PO_MOD=$(git ls-files -m po/ | gawk '/po\/[[:alpha:]_\-]*\.po/ { sub("po/", ""); print $0; }' | sort)

for f in $PO_MOD; do
	try_lang $f
done

for f in $PO_NEW; do
	git add "po/$f"
	do_commit "po/$f" "po: add $f (from translationproject.org)"
done

LINGUAS=$(find po/ -name '*.po' -type f -printf '%P\n' | sed 's/\.po//g' | sort)
echo "$LINGUAS" > po/LINGUAS

# cleanup
git checkout -f po/ &> /dev/null
